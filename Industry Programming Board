{"slots":{"0":{"name":"Screen","type":{"events":[],"methods":[]}},"1":{"name":"industry2","type":{"events":[],"methods":[]}},"2":{"name":"industry1","type":{"events":[],"methods":[]}},"3":{"name":"industry3","type":{"events":[],"methods":[]}},"4":{"name":"industry4","type":{"events":[],"methods":[]}},"5":{"name":"industry5","type":{"events":[],"methods":[]}},"6":{"name":"industry6","type":{"events":[],"methods":[]}},"7":{"name":"industry7","type":{"events":[],"methods":[]}},"8":{"name":"industry8","type":{"events":[],"methods":[]}},"9":{"name":"container","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"unit.hide()\nunit.setTimer(\"Update\",0.01)\nScreen.activate()\n\nIndustryTable = {}\nIndustryTable[#IndustryTable+1] = industry1 or nil\nIndustryTable[#IndustryTable+1] = industry2 or nil\nIndustryTable[#IndustryTable+1] = industry3 or nil\nIndustryTable[#IndustryTable+1] = industry4 or nil\nIndustryTable[#IndustryTable+1] = industry5 or nil\nIndustryTable[#IndustryTable+1] = industry6 or nil\nIndustryTable[#IndustryTable+1] = industry7 or nil\nIndustryTable[#IndustryTable+1] = industry8 or nil","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"},{"code":"local Product = \"Iron\" --export:The name of the product you are making\nlocal CycleTime = 180 --export:The time in seconds it takes this industry to complete 1 cycle\nlocal Mass = 7.85 --export:The mass in kilograms of your product.\n\nlocal status = {}\nlocal remaining = {}\nlocal progress = {}\n\nfunction getRemaining(industry, i)\n   status[i] = industry.getStatus() \n   progress[i] = math.floor((industry.getUptime() * industry.getEfficiency() - industry.getCycleCountSinceStartup() * CycleTime) / CycleTime * 100 + 0.5)\n   if progress[i] < 0 then progress[i] = 0 end \n   remaining[i] = CycleTime-(industry.getUptime() * industry.getEfficiency() - industry.getCycleCountSinceStartup() * CycleTime) \nend\n\nfor i = 1, #IndustryTable do\n    getRemaining(IndustryTable[i], i)\nend\n\n\nlocal GridHeight = container and 74 or 84\nhtml= [[<html style=\"background-color:rgb(15,30,90);\">\n<div style=\"font-size:8vh;text-align:center;color:black;position:absolute;border:0.5vw black inset;left:2%;top:2%;width:96%;height:10%;background:rgb(0,90,0);font-family:Arial;\">]]..Product..[[<br></div>\n<div style=\"display: grid; grid-template-columns: min-content min-content auto min-content;grid-template-rows:auto auto auto auto auto auto auto auto; white-space: nowrap; font-size:]].. GridHeight/10-1.5 ..[[vh;text-align:left;color:black;position:absolute;top:14%;left:2%;height:]].. GridHeight ..[[%;width:96%;border:0.5vw black inset;background:rgb(0,90,190);font-family:Arial;\">\n]]\n\nfunction appendhtml(status, remaining, progress, number) --This function builds the content of the grid\n    if status == 'RUNNING' then remaining = [[]].. math.floor(remaining+0.5) ..[[s remain]]\n    elseif status == 'JAMMED_MISSING_INGREDIENT' then remaining = \"\" status = 'NEED PARTS'\n    elseif status == 'JAMMED_OUTPUT_FULL' then remaining = \"\" status = 'OUTPUT FULL'\n    else remaining = \"\" status = 'ERROR' \n    end\n    html = html..[[\n    <div>Industry ]]..number..[[: </div>\n    <div>&nbsp;]]..status..[[&nbsp;</div>\n    <div style=\"border:.2vw solid black; height:75%;width:90%;\"><div style=\"width:]]..progress..[[%;background:green;height:100%;\">]].. progress ..[[%</div></div>\n    <div>]]..remaining..[[</div>]]\n    if number == #IndustryTable then --do this at the end of the final row\n        html = html..'</div>'\n        if container then\n            html = html..[[<div style=\"font-size:8vh;text-align:center;color:black;position:absolute;border:0.5vw black inset;left:2%;top:88%;width:96%;height:10%;background:rgb(0,90,180);\">In Output Container: ]].. math.floor(container.getItemsMass()/Mass+0.5) ..[[</div>]]\n        end\n        html = html..'</html>'\n    end\nend\n\nfor i = 1,#IndustryTable do\n appendhtml(status[i], remaining[i], progress[i], i) \nend\n\nScreen.setHTML(html)\nunit.setTimer(\"Update\",1)","filter":{"args":[{"value":"Update"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"1"},{"code":"Screen.deactivate()","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"2"}],"methods":[],"events":[]}
